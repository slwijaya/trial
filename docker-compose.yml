#VM
#version: '3.8'
#
#services:
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: product_api
#    ports:
#      - "8080:8080" # Menghubungkan port 8080 container ke host
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:mysql://<MYSQL_HOST>:3306/<DATABASE_NAME>
#      - SPRING_DATASOURCE_USERNAME=<MYSQL_USERNAME>
#      - SPRING_DATASOURCE_PASSWORD=<MYSQL_PASSWORD>
#      - SPRING_DATA_REDIS_HOST=redis
#      - SPRING_DATA_REDIS_PORT=6379
#    depends_on:
#      - redis
#
#  redis:
#    image: "redis:alpine"
#    container_name: redis_cache
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis_data:/data
#
#volumes:
#  redis_data:


#local

#services:
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: product_api
#    ports:
#      - "8080:8080"
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/sesi12
#      - SPRING_DATASOURCE_USERNAME=root
#      - SPRING_DATASOURCE_PASSWORD=
#      - SPRING_DATA_REDIS_HOST=redis
#      - SPRING_DATA_REDIS_PORT=6379
#    depends_on:
#      - db
#      - redis
#
#  db:
#    image: mysql:8.0
#    container_name: mysql_db
#    ports:
#      - "3306:3306"
#    environment:
#      MYSQL_ROOT_PASSWORD:
#      MYSQL_DATABASE: sesi12
#    volumes:
#      - mysql_data:/var/lib/mysql
#
#  redis:
#    image: "redis:alpine"
#    container_name: redis_cache
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis_data:/data
#
#volumes:
#  mysql_data:
#  redis_data:

services:
  # MySQL Service
  mysql_db:
    image: mysql:8.0
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=sesi12  # Ganti dengan nama database yang Anda inginkan
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - product_network

  # Redis Service
  redis_cache:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - product_network

  # Spring Boot Application
  product_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: product_api
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_db:3306/sesi12
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_DATA_REDIS_HOST=redis_cache
    depends_on:
      - mysql_db
      - redis_cache
    ports:
      - "8080:8080"
    networks:
      - product_network

# Volumes
volumes:
  mysql_data:
  redis_data:

# Networks
networks:
  product_network:
